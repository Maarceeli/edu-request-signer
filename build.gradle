plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id 'maven-publish'
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
        }
    }
}

allprojects {
    apply plugin: 'java'

    version = "0.1.0-SNAPSHOT"
    group = "io.github.wulkanowy.signer"

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    apply plugin: 'jacoco'

    sourceCompatibility = 11

    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
            javaParameters = true
        }
    }

    dependencies {
        implementation "com.brsanthu:migbase64:2.2"
        testImplementation "junit:junit:4.13"
    }

    jacocoTestReport {
        reports {
            xml.getRequired().set(true)
        }
    }

    test {
        testLogging.showStandardStreams = false
    }

    if (project.plugins.hasPlugin('java')) {
        tasks.register('sourcesJar', Jar) {
            dependsOn classes
            getArchiveClassifier().set("sources")
            from sourceSets.main.allSource
        }
        tasks.register('javadocJar', Jar) {
            dependsOn javadoc
            getArchiveClassifier().set("javadoc")
            from javadoc.destinationDir
        }
        artifacts {
            archives sourcesJar
            archives javadocJar
        }
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}

dependencies {
    implementation project(":hebe-jvm")
    implementation project(":jvm")
}
